<!--
 * Admin Products Page
 * Purpose: Product management interface
 * Used by: adminController.products
 * Features:
 * - Product listing
 * - Add/Edit/Delete products
 * - Product search and filter
 * - Bulk actions
 * - Stock management
 -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .sidebar {
            min-height: 100vh;
            background: #343a40;
            color: white;
        }
        .sidebar a {
            color: white;
            text-decoration: none;
        }
        .sidebar a:hover {
            color: #17a2b8;
        }
    </style>
</head>
<body>
    <%- include('../partials/navbar') %>

    <div class="container mt-4">
                <div class="d-flex justify-content-between align-items-center mb-4">
            <h2>Product Management</h2>
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProductModal">
                Add New Product
                    </button>
                </div>

        <!-- Products table -->
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                    <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                <th>Image</th>
                                <th>Product Name</th>
                                        <th>Category</th>
                                        <th>Price</th>
                                <th>Discount Price</th>
                                        <th>Stock</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                        <% products.forEach(product => { %>
                                            <tr data-product-id="<%= product.id %>">
                                    <td><%= product.id %></td>
                                    <td>
                                        <img src="<%= product.image_url || '/images/products/no-image.jpg' %>" 
                                             alt="<%= product.name %>" 
                                             style="width: 50px; height: 50px; object-fit: cover;"
                                             onerror="this.src='/images/products/no-image.jpg'">
                                    </td>
                                    <td><%= product.name %></td>
                                                <td><%= product.category_name || 'Uncategorized' %></td>
                                    <td><%= product.formatted_price %></td>
                                    <td><%= product.formatted_discount_price || '-' %></td>
                                    <td><%= product.stock %></td>
                                    <td>
                                        <div class="btn-group">
                                            <button class="btn btn-sm btn-info" 
                                                    onclick="editProduct(<%= product.id %>)">
                                                Edit
                                                    </button>
                                            <button class="btn btn-sm btn-danger" 
                                                    onclick="deleteProduct(<%= product.id %>)">
                                                Delete
                                                    </button>
                                        </div>
                                                </td>
                                            </tr>
                                        <% }); %>
                                </tbody>
                            </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Product Modal -->
    <div class="modal fade" id="addProductModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addProductForm">
                        <div class="mb-3">
                            <label for="name" class="form-label">Product Name</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="price" class="form-label">Price</label>
                                    <input type="number" class="form-control" id="price" name="price" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="discount_price" class="form-label">Discount Price</label>
                                    <input type="number" class="form-control" id="discount_price" name="discount_price" step="0.01">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="category_id" class="form-label">Category</label>
                                    <select class="form-select" id="category_id" name="category_id" required>
                                <option value="">Select Category</option>
                                    <% categories.forEach(category => { %>
                                        <option value="<%= category.id %>"><%= category.name %></option>
                                    <% }); %>
                            </select>
                        </div>
                            </div>
                            <div class="col-md-6">
                        <div class="mb-3">
                                    <label for="stock" class="form-label">Stock</label>
                                    <input type="number" class="form-control" id="stock" name="stock" required>
                        </div>
                        </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="saveProduct()">Save</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Product Modal -->
    <div class="modal fade" id="editProductModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Product</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editProductForm" enctype="multipart/form-data">
                        <input type="hidden" id="edit_id" name="id">
                        <div class="mb-3">
                            <label for="edit_name" class="form-label">Product Name</label>
                            <input type="text" class="form-control" id="edit_name" name="name" required>
                            </div>
                        <div class="mb-3">
                            <label for="edit_description" class="form-label">Description</label>
                            <textarea class="form-control" id="edit_description" name="description" rows="3"></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="edit_image" class="form-label">Product Image</label>
                            <input type="file" class="form-control" id="edit_image" name="image" accept="image/*">
                            <small class="text-muted">Leave empty to keep current image</small>
                    </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="edit_price" class="form-label">Price</label>
                                    <input type="number" class="form-control" id="edit_price" name="price" step="0.01" required>
                    </div>
                </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="edit_discount_price" class="form-label">Discount Price</label>
                                    <input type="number" class="form-control" id="edit_discount_price" name="discount_price" step="0.01">
        </div>
    </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="edit_category_id" class="form-label">Category</label>
                                    <select class="form-select" id="edit_category_id" name="category_id" required>
                                        <option value="">Select Category</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category.id %>"><%= category.name %></option>
                                <% }); %>
                            </select>
                        </div>
                        </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="edit_stock" class="form-label">Stock</label>
                                    <input type="number" class="form-control" id="edit_stock" name="stock" required>
                                </div>
                            </div>
                        </div>
                    </form>
                    </div>
                    <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="updateProduct()">Update</button>
                    </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Add Product
        async function saveProduct() {
            try {
                const form = document.getElementById('addProductForm');
                const formData = new FormData(form);
                
                const response = await fetch('/admin/products', {
                    method: 'POST',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    alert('Product created successfully');
                    location.reload();
                } else {
                    alert('Error creating product: ' + data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error creating product');
            }
        }

        // Edit Product
        async function editProduct(id) {
            try {
                const response = await fetch(`/admin/products/${id}`);
                const data = await response.json();
                
                if (data.success) {
                    const product = data.product;
                    document.getElementById('edit_id').value = product.id;
                    document.getElementById('edit_name').value = product.name;
                    document.getElementById('edit_description').value = product.description;
                    document.getElementById('edit_price').value = product.price;
                    document.getElementById('edit_discount_price').value = product.discount_price || '';
                    document.getElementById('edit_category_id').value = product.category_id;
                    document.getElementById('edit_stock').value = product.stock;
                    
                    // Show current image if exists
                    const currentImage = document.getElementById('current_image');
                    if (currentImage) {
                        currentImage.src = product.image_url || '/images/products/no-image.jpg';
                    }
                    
                    // Show modal
                    const modal = new bootstrap.Modal(document.getElementById('editProductModal'));
                    modal.show();
                } else {
                    alert('Error loading product: ' + data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error loading product');
            }
        }

        // Update Product
        async function updateProduct() {
            try {
                const form = document.getElementById('editProductForm');
                const formData = new FormData(form);
                const id = formData.get('id');
                
                const response = await fetch(`/admin/products/${id}`, {
                    method: 'PUT',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    // Cập nhật UI với dữ liệu mới
                    const productRow = document.querySelector(`tr[data-product-id="${id}"]`);
                    if (productRow) {
                        // Cập nhật ảnh
                        const imgElement = productRow.querySelector('img');
                        if (imgElement) {
                            imgElement.src = data.product.image_url || '/images/products/no-image.jpg';
                        }
                        
                        // Cập nhật tên sản phẩm
                        const nameCell = productRow.querySelector('td:nth-child(3)');
                        if (nameCell) {
                            nameCell.textContent = data.product.name;
                        }
                        
                        // Cập nhật giá
                        const priceCell = productRow.querySelector('td:nth-child(5)');
                        if (priceCell) {
                            priceCell.textContent = data.product.formatted_price;
                        }
                        
                        // Cập nhật giá khuyến mãi
                        const discountCell = productRow.querySelector('td:nth-child(6)');
                        if (discountCell) {
                            discountCell.textContent = data.product.formatted_discount_price || '-';
                        }
                        
                        // Cập nhật số lượng
                        const stockCell = productRow.querySelector('td:nth-child(7)');
                        if (stockCell) {
                            stockCell.textContent = data.product.stock;
                        }
                    }
                    
                    // Đóng modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('editProductModal'));
                    modal.hide();
                    
                    // Hiển thị thông báo thành công
                    alert('Product updated successfully');
                } else {
                    alert('Error updating product: ' + data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating product');
            }
        }

        // Delete Product
        async function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                try {
                    const response = await fetch(`/admin/products/${id}`, {
                        method: 'DELETE'
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        alert('Product deleted successfully');
                        location.reload();
                    } else {
                        alert('Error deleting product: ' + data.message);
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error deleting product');
                }
            }
        }
    </script>
</body>
</html> 