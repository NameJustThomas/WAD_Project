<!--
 * Admin Users Page
 * Purpose: User management interface
 * Used by: adminController.users
 * Features:
 * - User listing
 * - Add/Edit/Delete users
 * - User search and filter
 * - Role management
 * - User activity logs
-->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title><%= title %> - Admin Panel</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet"/>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css"/>
  <link rel="stylesheet" href="/css/style.css" />
</head>
<body>
  <%- include('../partials/navbar') %>

  <div class="container-fluid py-4 px-lg-5">
    <div class="row">
        
      <!-- Sidebar Filters -->
      <%- include('partials/sidebar', { path: '/admin/users' }) %>

      <!-- Main Content -->
      <section class="col-lg-9">
        <div class="d-flex justify-content-between align-items-center mb-3 font-jack-frost">
          <h4 class="fw-bold text-uppercase m-0">Manage Users</h4>
          <a href="/admin/users/new" class="btn btn-dark"><i class="fas fa-user-plus me-1"></i> Add User</a>
        </div>

        <div class="card shadow-sm font-jack-frost">
          <div class="card-body table-responsive">
            <table class="table align-middle">
              <thead class="table-light">
                <tr>
                  <th>ID</th>
                  <th>Name</th>
                  <th>Email</th>
                  <th>Role</th>
                  <th>Status</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% if (users && users.length > 0) { %>
                  <% users.forEach(user => { %>
                    <tr>
                      <td><%= user.id %></td>
                      <td><%= user.name %></td>
                      <td><%= user.email %></td>
                      <td><%= user.role %></td>
                      <td>
                        <select class="form-select form-select-sm status-select" data-user-id="<%= user.id %>">
                          <option value="active" <%= user.status === 'active' ? 'selected' : '' %>>Active</option>
                          <option value="inactive" <%= user.status === 'inactive' ? 'selected' : '' %>>Inactive</option>
                          <option value="banned" <%= user.status === 'banned' ? 'selected' : '' %>>Banned</option>
                        </select>
                      </td>
                      <td>
                        <button class="btn btn-sm btn-outline-primary edit-user" data-user-id="<%= user.id %>"><i class="fas fa-edit"></i></button>
                        <button class="btn btn-sm btn-outline-danger delete-user" data-user-id="<%= user.id %>"><i class="fas fa-trash"></i></button>
                      </td>
                    </tr>
                  <% }); %>
                <% } else { %>
                  <tr>
                    <td colspan="6" class="text-center">No users found</td>
                  </tr>
                <% } %>
              </tbody>
            </table>
          </div>
        </div>
      </section>
    </div>
  </div>

  <!-- Edit User Modal -->
  <div class="modal fade" id="editUserModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <form id="editUserForm" class="modal-content">
        <input type="hidden" name="id" id="id" />
        <div class="modal-header">
          <h5 class="modal-title">Edit User</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="mb-3">
            <label for="name" class="form-label">Name</label>
            <input name="name" id="name" type="text" class="form-control" required />
          </div>
          <div class="mb-3">
            <label for="email" class="form-label">Email</label>
            <input name="email" id="email" type="email" class="form-control" required />
          </div>
          <div class="mb-3">
            <label for="role" class="form-label">Role</label>
            <select name="role" id="role" class="form-select">
              <option value="user">User</option>
              <option value="admin">Admin</option>
            </select>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" id="updateUser" class="btn btn-primary">Update User</button>
        </div>
      </form>
    </div>
  </div>

  <%- include('../partials/footer') %>

  <!-- JS Dependencies -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Handle status change
      document.querySelectorAll('.status-select').forEach(select => {
        select.dataset.originalValue = select.value;

        select.addEventListener('change', async function () {
          const userId = this.dataset.userId;
          const newStatus = this.value;

          try {
            const response = await fetch(`/admin/users/${userId}/status`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ status: newStatus })
            });

            if (response.ok) {
              alert('User status updated successfully');
              this.dataset.originalValue = newStatus;
            } else {
              throw new Error('Failed to update user status');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error updating user status');
            this.value = this.dataset.originalValue;
          }
        });
      });

      // Handle edit user
      document.querySelectorAll('.edit-user').forEach(button => {
        button.addEventListener('click', async function () {
          const userId = this.dataset.userId;
          try {
            const response = await fetch(`/admin/users/${userId}`);
            if (!response.ok) throw new Error('Failed to fetch user data');
            const user = await response.json();

            const form = document.getElementById('editUserForm');
            const modalEl = document.getElementById('editUserModal');

            if (!form || !modalEl) {
              alert('Edit form or modal is missing');
              return;
            }

            form.id.value = user.id || '';
            form.name.value = user.name || '';
            form.email.value = user.email || '';
            form.role.value = user.role || 'user';

            const modal = new bootstrap.Modal(modalEl);
            modal.show();

          } catch (error) {
            console.error('Error:', error);
            alert('Error loading user data');
          }
        });
      });

      // Handle update user
      const updateButton = document.getElementById('updateUser');
      if (updateButton) {
        updateButton.addEventListener('click', async () => {
          const form = document.getElementById('editUserForm');
          if (!form) {
            alert('Edit form not found');
            return;
          }
          const formData = new FormData(form);
          const data = Object.fromEntries(formData.entries());
          const userId = data.id;

          try {
            const response = await fetch(`/admin/users/${userId}`, {
              method: 'PUT',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify(data)
            });

            if (response.ok) {
              window.location.reload();
            } else {
              throw new Error('Failed to update user');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error updating user');
          }
        });
      }

      // Handle delete user
      document.querySelectorAll('.delete-user').forEach(button => {
        button.addEventListener('click', async function () {
          if (!confirm('Are you sure you want to delete this user?')) {
            return;
          }

          const userId = this.dataset.userId;
          try {
            const response = await fetch(`/admin/users/${userId}`, {
              method: 'DELETE'
            });

            if (response.ok) {
              window.location.reload();
            } else {
              throw new Error('Failed to delete user');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Error deleting user');
          }
        });
      });
    });
  </script>
</body>
</html>
